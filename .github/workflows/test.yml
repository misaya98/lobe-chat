name: Test CI

on: [push, pull_request]

jobs:
  # Package tests with custom config
  test-packages-with-config:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - package: file-loaders
            config: packages/file-loaders/vitest.config.ts
    
    name: Test ${{ matrix.package }} package

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ secrets.BUN_VERSION }}

      - name: Install deps
        run: bun i

      - name: Test ${{ matrix.package }} package
        run: npx vitest run --config ${{ matrix.config }} 'packages/${{ matrix.package }}/**/*.test.*'

  # Package tests using default config
  test-packages-default:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [prompts, model-runtime, web-crawler]
    
    name: Test ${{ matrix.package }} package

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ secrets.BUN_VERSION }}

      - name: Install deps
        run: bun i

      - name: Test ${{ matrix.package }} package
        run: npx vitest run --config vitest.config.ts 'packages/${{ matrix.package }}/**/*.test.*'
        
      - name: Test ${{ matrix.package }} with coverage
        if: matrix.package == 'prompts'
        run: npx vitest run --config vitest.config.ts 'packages/${{ matrix.package }}/**/*.test.*' --coverage
        
      - name: Upload ${{ matrix.package }} coverage to Codecov
        if: matrix.package == 'prompts'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: ${{ matrix.package }}-package

  # App and server tests
  test-app:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: paradedb/paradedb:latest
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s  --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ secrets.BUN_VERSION }}

      - name: Install deps
        run: bun i

      - name: Lint
        run: bun run lint

      - name: Test Server Coverage
        run: bun run test-server:coverage
        env:
          DATABASE_TEST_URL: postgresql://postgres:postgres@localhost:5432/postgres
          DATABASE_DRIVER: node
          NEXT_PUBLIC_SERVICE_MODE: server
          KEY_VAULTS_SECRET: LA7n9k3JdEcbSgml2sxfw+4TV1AzaaFU5+R176aQz4s=
          S3_PUBLIC_DOMAIN: https://example.com
          APP_URL: https://home.com

      - name: Upload Server coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/server/lcov.info
          flags: server

      - name: Test App Coverage
        run: bun run test-app:coverage

      - name: Upload App Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/app/lcov.info
          flags: app
